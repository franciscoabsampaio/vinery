name: Test

on:
  pull_request:
    branches:
      - release

jobs:
  tests:
    name: "${{ matrix.tf_runner }} v${{ matrix.tf_version }} - ${{ matrix.python }} - ${{ matrix.os || 'Ubuntu' }}"
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}

    strategy:
      fail-fast: false
      matrix:
        tf_runner: ['terraform', 'tofu']
        tf_version: ['1.6', '1.7', '1.8', '1.9', '1.10', '1.11']
        python: ['3.13', '3.12', '3.11', '3.10', '3.9']
        include:
          - {name: Windows, python: '3.12', os: windows-latest}
          - {name: Mac, python: '3.12', os: macos-latest}
        exclude:
          # Remove versions not available in OpenTofu
          - { tf_runner: 'tofu', tf_version: '1.10' }
          - { tf_runner: 'tofu', tf_version: '1.11' }

    steps:
      - uses: opentofu/setup-opentofu@v1
        if: matrix.tf_runner == 'tofu'
        with:
          tofu_version: ${{ matrix.tf_version }}

      - uses: hashicorp/setup-terraform@v3
        if: matrix.tf_runner == 'terraform'
        with:
          terraform_version: ${{ matrix.tf_version }}

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ matrix.python }}
          allow-prereleases: true
          cache: pip
      - run: pip install build
      - run: python -m build
      - run: pip install --force-reinstall dist/*.whl  # Install the built package, not the source
      - run: pip install '.[test]' --no-deps  # Install the test dependencies without reinstalling the pkg
      - run: VINERY_RUNNER=${{ matrix.tf_runner }} python -m pytest -vs
